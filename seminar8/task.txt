2. Установить Docker.
---------------------------
lllod@GB-Ubuntu:~$ docker -h
Command 'docker' not found, but can be installed with:
sudo snap install docker         # version 20.10.24, or
sudo apt  install docker.io      # version 20.10.21-0ubuntu1~22.04.3
sudo apt  install podman-docker  # version 3.4.4+ds1-1ubuntu1.22.04.1
See 'snap info docker' for additional versions.
lllod@GB-Ubuntu:~$ sudo apt install docker.io
[sudo] password for lllod:
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
The following additional packages will be installed:
  bridge-utils containerd git git-man liberror-perl pigz runc ubuntu-fan
Suggested packages:
  ifupdown aufs-tools btrfs-progs cgroupfs-mount | cgroup-lite debootstrap docker-doc rinse zfs-fuse | zfsutils
  git-daemon-run | git-daemon-sysvinit git-doc git-email git-gui gitk gitweb git-cvs git-mediawiki git-svn
The following NEW packages will be installed:
  bridge-utils containerd docker.io git git-man liberror-perl pigz runc ubuntu-fan
0 upgraded, 9 newly installed, 0 to remove and 2 not upgraded.
Need to get 76,2 MB of archives.
After this operation, 307 MB of additional disk space will be used.
Do you want to continue? [Y/n] y
Get:1 http://ru.archive.ubuntu.com/ubuntu jammy/universe amd64 pigz amd64 2.6-1 [63,6 kB]
Get:2 http://ru.archive.ubuntu.com/ubuntu jammy/main amd64 bridge-utils amd64 1.7-1ubuntu3 [34,4 kB]
Get:3 http://ru.archive.ubuntu.com/ubuntu jammy-updates/main amd64 runc amd64 1.1.4-0ubuntu1~22.04.3 [4 244 kB]
Get:4 http://ru.archive.ubuntu.com/ubuntu jammy-updates/main amd64 containerd amd64 1.6.12-0ubuntu1~22.04.3 [34,4 MB]
Get:5 http://ru.archive.ubuntu.com/ubuntu jammy-updates/universe amd64 docker.io amd64 20.10.21-0ubuntu1~22.04.3 [33,3 MB]
Get:6 http://ru.archive.ubuntu.com/ubuntu jammy/main amd64 liberror-perl all 0.17029-1 [26,5 kB]
Get:7 http://ru.archive.ubuntu.com/ubuntu jammy-updates/main amd64 git-man all 1:2.34.1-1ubuntu1.9 [954 kB]
Get:8 http://ru.archive.ubuntu.com/ubuntu jammy-updates/main amd64 git amd64 1:2.34.1-1ubuntu1.9 [3 166 kB]
Get:9 http://ru.archive.ubuntu.com/ubuntu jammy/universe amd64 ubuntu-fan all 0.12.16 [35,2 kB]
Fetched 76,2 MB in 8s (10,1 MB/s)
Preconfiguring packages ...
Selecting previously unselected package pigz.
(Reading database ... 180651 files and directories currently installed.)
Preparing to unpack .../0-pigz_2.6-1_amd64.deb ...
Unpacking pigz (2.6-1) ...
Selecting previously unselected package bridge-utils.
Preparing to unpack .../1-bridge-utils_1.7-1ubuntu3_amd64.deb ...
Unpacking bridge-utils (1.7-1ubuntu3) ...
Selecting previously unselected package runc.
Preparing to unpack .../2-runc_1.1.4-0ubuntu1~22.04.3_amd64.deb ...
Unpacking runc (1.1.4-0ubuntu1~22.04.3) ...
Selecting previously unselected package containerd.
Preparing to unpack .../3-containerd_1.6.12-0ubuntu1~22.04.3_amd64.deb ...
Unpacking containerd (1.6.12-0ubuntu1~22.04.3) ...
Selecting previously unselected package docker.io.
Preparing to unpack .../4-docker.io_20.10.21-0ubuntu1~22.04.3_amd64.deb ...
Unpacking docker.io (20.10.21-0ubuntu1~22.04.3) ...
Selecting previously unselected package liberror-perl.
Preparing to unpack .../5-liberror-perl_0.17029-1_all.deb ...
Unpacking liberror-perl (0.17029-1) ...
Selecting previously unselected package git-man.
Preparing to unpack .../6-git-man_1%3a2.34.1-1ubuntu1.9_all.deb ...
Unpacking git-man (1:2.34.1-1ubuntu1.9) ...
Selecting previously unselected package git.
Preparing to unpack .../7-git_1%3a2.34.1-1ubuntu1.9_amd64.deb ...
Unpacking git (1:2.34.1-1ubuntu1.9) ...
Selecting previously unselected package ubuntu-fan.
Preparing to unpack .../8-ubuntu-fan_0.12.16_all.deb ...
Unpacking ubuntu-fan (0.12.16) ...
Setting up runc (1.1.4-0ubuntu1~22.04.3) ...
Setting up liberror-perl (0.17029-1) ...
Setting up bridge-utils (1.7-1ubuntu3) ...
Setting up pigz (2.6-1) ...
Setting up git-man (1:2.34.1-1ubuntu1.9) ...
Setting up containerd (1.6.12-0ubuntu1~22.04.3) ...
Created symlink /etc/systemd/system/multi-user.target.wants/containerd.service → /lib/systemd/system/containerd.service.
Setting up ubuntu-fan (0.12.16) ...
Created symlink /etc/systemd/system/multi-user.target.wants/ubuntu-fan.service → /lib/systemd/system/ubuntu-fan.service.
Setting up docker.io (20.10.21-0ubuntu1~22.04.3) ...
Adding group `docker' (GID 139) ...
Done.
Created symlink /etc/systemd/system/multi-user.target.wants/docker.service → /lib/systemd/system/docker.service.
Created symlink /etc/systemd/system/sockets.target.wants/docker.socket → /lib/systemd/system/docker.socket.
Setting up git (1:2.34.1-1ubuntu1.9) ...
Processing triggers for man-db (2.10.2-1) ...
lllod@GB-Ubuntu:~$ docker -h
Flag shorthand -h has been deprecated, please use --help

Usage:  docker [OPTIONS] COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default "/home/lllod/.docker")
  -c, --context string     Name of the context to use to connect to the daemon (overrides DOCKER_HOST env var and
                           default context set with "docker context use")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level ("debug"|"info"|"warn"|"error"|"fatal") (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default "/home/lllod/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default "/home/lllod/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default "/home/lllod/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Management Commands:
  builder     Manage builds
  config      Manage Docker configs
  container   Manage containers
  context     Manage contexts
  image       Manage images
  manifest    Manage Docker image manifests and manifest lists
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  secret      Manage Docker secrets
  service     Manage services
  stack       Manage Docker stacks
  swarm       Manage Swarm
  system      Manage Docker
  trust       Manage trust on Docker images
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.

To get more help with docker, check out our guides at https://docs.docker.com/go/guides/
lllod@GB-Ubuntu:~$


3. Запустить контейнер с Ubuntu.
---------------------------
lllod@GB-Ubuntu:~$ sudo docker search ubuntu
lllod@GB-Ubuntu:~$ sudo docker pull ubuntu
lllod@GB-Ubuntu:~$ sudo docker images
REPOSITORY   TAG       IMAGE ID       CREATED       SIZE
ubuntu       latest    5a81c4b8502e   2 weeks ago   77.8MB
lllod@GB-Ubuntu:~$ sudo docker run -dit -p 3214:80 --name ubuntudocker ubuntu
6553052ad9a62f8eab90ab87506fb83ee4e5ef5e07e49d48cf9b208f60404ab3
lllod@GB-Ubuntu:~$ sudo docker ps
CONTAINER ID   IMAGE     COMMAND       CREATED         STATUS         PORTS                                   NAMES
6553052ad9a6   ubuntu    "/bin/bash"   8 seconds ago   Up 6 seconds   0.0.0.0:3214->80/tcp, :::3214->80/tcp   ubuntudocker
lllod@GB-Ubuntu:~$ sudo docker exec -it ubuntudocker /bin/bash
root@6553052ad9a6:/# ll
total 56
drwxr-xr-x   1 root root 4096 Jul 18 11:05 ./
drwxr-xr-x   1 root root 4096 Jul 18 11:05 ../
-rwxr-xr-x   1 root root    0 Jul 18 11:05 .dockerenv*
lrwxrwxrwx   1 root root    7 Jun 24 02:02 bin -> usr/bin/
drwxr-xr-x   2 root root 4096 Apr 18  2022 boot/
drwxr-xr-x   5 root root  360 Jul 18 11:05 dev/
drwxr-xr-x   1 root root 4096 Jul 18 11:05 etc/
drwxr-xr-x   2 root root 4096 Apr 18  2022 home/
lrwxrwxrwx   1 root root    7 Jun 24 02:02 lib -> usr/lib/
lrwxrwxrwx   1 root root    9 Jun 24 02:02 lib32 -> usr/lib32/
lrwxrwxrwx   1 root root    9 Jun 24 02:02 lib64 -> usr/lib64/
lrwxrwxrwx   1 root root   10 Jun 24 02:02 libx32 -> usr/libx32/
drwxr-xr-x   2 root root 4096 Jun 24 02:02 media/
drwxr-xr-x   2 root root 4096 Jun 24 02:02 mnt/
drwxr-xr-x   2 root root 4096 Jun 24 02:02 opt/
dr-xr-xr-x 299 root root    0 Jul 18 11:05 proc/
drwx------   2 root root 4096 Jun 24 02:06 root/
drwxr-xr-x   5 root root 4096 Jun 24 02:06 run/
lrwxrwxrwx   1 root root    8 Jun 24 02:02 sbin -> usr/sbin/
drwxr-xr-x   2 root root 4096 Jun 24 02:02 srv/
dr-xr-xr-x  13 root root    0 Jul 18 11:05 sys/
drwxrwxrwt   2 root root 4096 Jun 24 02:06 tmp/
drwxr-xr-x  14 root root 4096 Jun 24 02:02 usr/
drwxr-xr-x  11 root root 4096 Jun 24 02:06 var/
root@6553052ad9a6:/# exit
exit
lllod@GB-Ubuntu:~$